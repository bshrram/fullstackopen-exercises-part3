{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","filter","handleFilterChange","value","onChange","PersonForm","props","addName","newName","newNumber","handleNameChange","handleNumberChange","onSubmit","type","Persons","shownPersons","map","person","key","id","name","number","onClick","deletePerson","Notification","message","errorState","notificationStyle","background","fontSize","borderStyle","borderRadius","padding","marginBottom","color","style","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","persons","setPersons","setNewName","setNewNumber","setFilter","setMessage","setErrorState","useEffect","personService","initialPersons","newNotification","newMessage","e","setTimeout","toLowerCase","includes","event","target","preventDefault","personObject","foundPerson","find","window","confirm","returnedPerson","p","catch","err","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.853f04ca.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({ filter, handleFilterChange }) => {\r\n  return (\r\n    <div>\r\n      filter shown with\r\n      <input value={filter} onChange={handleFilterChange} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter\r\n","import React from 'react'\r\n\r\nconst PersonForm = props => {\r\n  const {\r\n    addName,\r\n    newName,\r\n    newNumber,\r\n    handleNameChange,\r\n    handleNumberChange\r\n  } = { ...props }\r\n\r\n  return (\r\n    <form onSubmit={addName}>\r\n      <div>\r\n        name: <input value={newName} onChange={handleNameChange} />\r\n      </div>\r\n      <div>\r\n        number: <input value={newNumber} onChange={handleNumberChange} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm\r\n","import React from 'react'\r\n\r\nconst Persons = props => {\r\n  return (\r\n    <>\r\n      {props.shownPersons.map(person => (\r\n        <div key={person.id}>\r\n          {person.name} {person.number + ' '}\r\n          <button onClick={() => props.deletePerson(person)}>delete</button>\r\n        </div>\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Persons\r\n","import React from 'react'\r\nconst Notification = ({ message, errorState }) => {\r\n  const notificationStyle = {\r\n    background: 'lightgrey',\r\n    fontSize: 20,\r\n    borderStyle: 'solid',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginBottom: 10\r\n  }\r\n  notificationStyle.color = errorState ? 'red' : 'green'\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return <div style={notificationStyle}>{message}</div>\r\n}\r\n\r\nexport default Notification\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deleteOne = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, deleteOne }","import React, { useState, useEffect } from 'react'\r\nimport Filter from './components/Filter'\r\nimport PersonForm from './components/PersonForm'\r\nimport Persons from './components/Persons'\r\nimport Notification from './components/Notification'\r\nimport personService from './services/persons'\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([])\r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n  const [filter, setFilter] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n  const [errorState, setErrorState] = useState(0)\r\n\r\n  useEffect(() => {\r\n    personService.getAll().then(initialPersons => {\r\n      setPersons(initialPersons)\r\n    })\r\n  }, [])\r\n\r\n  const newNotification = (newMessage, e) => {\r\n    setMessage(newMessage)\r\n    setErrorState(e)\r\n    setTimeout(() => {\r\n      setMessage(null)\r\n    }, 5000)\r\n  }\r\n  const addName = event => {\r\n    event.preventDefault()\r\n\r\n    const personObject = {\r\n      name: newName,\r\n      number: newNumber\r\n    }\r\n    const foundPerson = persons.find(person => person.name === newName)\r\n    if (foundPerson) {\r\n      if (\r\n        window.confirm(\r\n          `${newName} is already added to phonebook, replace the old number with a new one?`\r\n        )\r\n      ) {\r\n        personService\r\n          .update(foundPerson.id, personObject)\r\n          .then(returnedPerson => {\r\n            newNotification(`Updated ${returnedPerson.name}'s number`, 0)\r\n            setPersons(\r\n              persons.map(p => (p.id !== foundPerson.id ? p : returnedPerson))\r\n            )\r\n          })\r\n          .catch(err => {\r\n            newNotification(\r\n              `Information of ${foundPerson.name} has already been removed from server`,\r\n              1\r\n            )\r\n            setPersons(persons.filter(p => p.id !== foundPerson.id))\r\n          })\r\n      }\r\n    } else {\r\n      personService.create(personObject).then(returnedPerson => {\r\n        newNotification(`Added ${returnedPerson.name}`, 0)\r\n        setPersons(persons.concat(returnedPerson))\r\n        setNewName('')\r\n        setNewNumber('')\r\n      })\r\n    }\r\n  }\r\n\r\n  const deletePerson = person => {\r\n    if (window.confirm(`Delete ${person.name} ?`)) {\r\n      personService\r\n        .deleteOne(person.id)\r\n        .then(response => {\r\n          newNotification(`deleted ${person.name}`, 0)\r\n          setPersons(persons.filter(p => p.id !== person.id))\r\n        })\r\n        .catch(err => {\r\n          newNotification(\r\n            `Information of ${person.name} has already been removed from server`,\r\n            1\r\n          )\r\n          setPersons(persons.filter(p => p.id !== person.id))\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleNameChange = event => {\r\n    //console.log(event.target.value)\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = event => {\r\n    //console.log(event.target.value)\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleFilterChange = event => {\r\n    //console.log(event.target.value)\r\n    setFilter(event.target.value)\r\n  }\r\n\r\n  const shownPersons =\r\n    filter === ''\r\n      ? persons\r\n      : persons.filter(person =>\r\n          person.name.toLowerCase().includes(filter.toLowerCase())\r\n        )\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={message} errorState={errorState} />\r\n      <Filter filter={filter} handleFilterChange={handleFilterChange} />\r\n      <h3>add a new</h3>\r\n      <PersonForm\r\n        addName={addName}\r\n        newName={newName}\r\n        newNumber={newNumber}\r\n        handleNameChange={handleNameChange}\r\n        handleNumberChange={handleNumberChange}\r\n      />\r\n      <h3>Numbers</h3>\r\n      <Persons shownPersons={shownPersons} deletePerson={deletePerson} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\n\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}